//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PIHO_DENTIST_SOFTWARE
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class dentistryEntities : DbContext
    {
        public dentistryEntities()
            : base("name=dentistryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AcessLevel> AcessLevels { get; set; }
        public DbSet<Clinic> Clinics { get; set; }
        public DbSet<ClinicType> ClinicTypes { get; set; }
        public DbSet<consult> consults { get; set; }
        public DbSet<costconfirm_Detail> costconfirm_Detail { get; set; }
        public DbSet<costconfirm_head> costconfirm_head { get; set; }
        public DbSet<dent_neededservice> dent_neededservice { get; set; }
        public DbSet<dent_screen1> dent_screen1 { get; set; }
        public DbSet<doctorsService> doctorsServices { get; set; }
        public DbSet<DoctorsWorkTime> DoctorsWorkTimes { get; set; }
        public DbSet<EventsDescription> EventsDescriptions { get; set; }
        public DbSet<EventsLog> EventsLogs { get; set; }
        public DbSet<Introduction_Comment> Introduction_Comment { get; set; }
        public DbSet<Introduction_Detail> Introduction_Detail { get; set; }
        public DbSet<introduction_Head> introduction_Head { get; set; }
        public DbSet<IntroductionComment> IntroductionComments { get; set; }
        public DbSet<IntroductionKind> IntroductionKinds { get; set; }
        public DbSet<Medicalrest> Medicalrests { get; set; }
        public DbSet<outcenter> outcenters { get; set; }
        public DbSet<OutCenterdepartment> OutCenterdepartments { get; set; }
        public DbSet<outcenterKind> outcenterKinds { get; set; }
        public DbSet<PaientStatu> PaientStatus { get; set; }
        public DbSet<PaientType> PaientTypes { get; set; }
        public DbSet<PlanVisit> PlanVisits { get; set; }
        public DbSet<Recipe> Recipes { get; set; }
        public DbSet<Recipe_comment> Recipe_comment { get; set; }
        public DbSet<RecipeError> RecipeErrors { get; set; }
        public DbSet<RecipeService> RecipeServices { get; set; }
        public DbSet<Services_detail> Services_detail { get; set; }
        public DbSet<Services_Head> Services_Head { get; set; }
        public DbSet<ServiceTypeF16> ServiceTypeF16 { get; set; }
        public DbSet<ServiceTypeIntroduction> ServiceTypeIntroductions { get; set; }
        public DbSet<ServiceTypeKanoon> ServiceTypeKanoons { get; set; }
        public DbSet<ServiceTypeScreen> ServiceTypeScreens { get; set; }
        public DbSet<Shift> Shifts { get; set; }
        public DbSet<Speciality> Specialities { get; set; }
        public DbSet<specialityKind> specialityKinds { get; set; }
        public DbSet<Takekind_Recipe> Takekind_Recipe { get; set; }
        public DbSet<TblUser> TblUsers { get; set; }
        public DbSet<tempturnno> tempturnnoes { get; set; }
        public DbSet<TurnStatu> TurnStatus { get; set; }
        public DbSet<userKind> userKinds { get; set; }
        public DbSet<vacation> vacations { get; set; }
        public DbSet<version> versions { get; set; }
        public DbSet<Dent_Tooth2> Dent_Tooth2 { get; set; }
        public DbSet<Dent_Tooth3> Dent_Tooth3 { get; set; }
        public DbSet<Dent_Tooth4> Dent_Tooth4 { get; set; }
        public DbSet<Dent_Tooth5> Dent_Tooth5 { get; set; }
        public DbSet<TblUsers_view> TblUsers_view { get; set; }
        public DbSet<Refer> Refers { get; set; }
        public DbSet<Refer_status> Refer_status { get; set; }
        public DbSet<Refer_status_desc> Refer_status_desc { get; set; }
        public DbSet<Screen_count> Screen_count { get; set; }
        public DbSet<TblCompany> TblCompanies { get; set; }
        public DbSet<TblManagement> TblManagements { get; set; }
        public DbSet<TblMaritalStatu> TblMaritalStatus { get; set; }
        public DbSet<TblRelation> TblRelations { get; set; }
        public DbSet<TblSubCompany> TblSubCompanies { get; set; }
        public DbSet<TblValidCenter> TblValidCenters { get; set; }
        public DbSet<TblValidCenterCity> TblValidCenterCities { get; set; }
        public DbSet<TblValidCenterZone> TblValidCenterZones { get; set; }
        public DbSet<JobLocation> JobLocations { get; set; }
        public DbSet<Tbl_ValidCenterZone> Tbl_ValidCenterZone { get; set; }
        public DbSet<name> names { get; set; }
        public DbSet<Radio_Services_request_Detail> Radio_Services_request_Detail { get; set; }
        public DbSet<TblEmployeetype> TblEmployeetypes { get; set; }
        public DbSet<NiocPerson> NiocPersons { get; set; }
        public DbSet<EmployeeInfoTbl> EmployeeInfoTbls { get; set; }
        public DbSet<PersonTbl> PersonTbls { get; set; }
        public DbSet<Radio_Services_request> Radio_Services_request { get; set; }
        public DbSet<IllnessHistory> IllnessHistories { get; set; }
        public DbSet<familydentist_view> familydentist_view { get; set; }
        public DbSet<Services_Group_report> Services_Group_report { get; set; }
        public DbSet<tariff> tariffs { get; set; }
        public DbSet<full_niocperson> full_niocperson { get; set; }
        public DbSet<Dent_Tooth> Dent_Tooth { get; set; }
        public DbSet<dent_screen2> dent_screen2 { get; set; }
        public DbSet<Event_report> Event_report { get; set; }
    
        public virtual ObjectResult<CheckDeleteplanvist_Result> CheckDeleteplanvist(Nullable<int> planvisit_Code)
        {
            var planvisit_CodeParameter = planvisit_Code.HasValue ?
                new ObjectParameter("Planvisit_Code", planvisit_Code) :
                new ObjectParameter("Planvisit_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDeleteplanvist_Result>("CheckDeleteplanvist", planvisit_CodeParameter);
        }
    
        public virtual ObjectResult<CheckDuplicateTurnno_Result> CheckDuplicateTurnno(Nullable<int> planvisit_code, Nullable<byte> turnno)
        {
            var planvisit_codeParameter = planvisit_code.HasValue ?
                new ObjectParameter("Planvisit_code", planvisit_code) :
                new ObjectParameter("Planvisit_code", typeof(int));
    
            var turnnoParameter = turnno.HasValue ?
                new ObjectParameter("Turnno", turnno) :
                new ObjectParameter("Turnno", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckDuplicateTurnno_Result>("CheckDuplicateTurnno", planvisit_codeParameter, turnnoParameter);
        }
    
        public virtual ObjectResult<checkduplicatevacations_Result> checkduplicatevacations(Nullable<int> doctorscode, string fromdate, string todate)
        {
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkduplicatevacations_Result>("checkduplicatevacations", doctorscodeParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<checkFkvdfamilyRecipe_Result> checkFkvdfamilyRecipe(Nullable<int> fkvdfamily, Nullable<int> personelcode, Nullable<int> code, string turndate)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var personelcodeParameter = personelcode.HasValue ?
                new ObjectParameter("Personelcode", personelcode) :
                new ObjectParameter("Personelcode", typeof(int));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            var turndateParameter = turndate != null ?
                new ObjectParameter("turndate", turndate) :
                new ObjectParameter("turndate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkFkvdfamilyRecipe_Result>("checkFkvdfamilyRecipe", fkvdfamilyParameter, personelcodeParameter, codeParameter, turndateParameter);
        }
    
        public virtual ObjectResult<checkFkvdfamilyRecipe_screen_Result> checkFkvdfamilyRecipe_screen(Nullable<int> fkvdfamily, string cdate)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var cdateParameter = cdate != null ?
                new ObjectParameter("cdate", cdate) :
                new ObjectParameter("cdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkFkvdfamilyRecipe_screen_Result>("checkFkvdfamilyRecipe_screen", fkvdfamilyParameter, cdateParameter);
        }
    
        public virtual ObjectResult<Childeren_Result> Childeren(string fromdate, string todate, Nullable<int> fromage, Nullable<int> toage, Nullable<int> doctorscode, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var fromageParameter = fromage.HasValue ?
                new ObjectParameter("fromage", fromage) :
                new ObjectParameter("fromage", typeof(int));
    
            var toageParameter = toage.HasValue ?
                new ObjectParameter("toage", toage) :
                new ObjectParameter("toage", typeof(int));
    
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Childeren_Result>("Childeren", fromdateParameter, todateParameter, fromageParameter, toageParameter, doctorscodeParameter, zaribParameter);
        }
    
        public virtual ObjectResult<consultSelect_Result> consultSelect(string satrtdate, string enddate)
        {
            var satrtdateParameter = satrtdate != null ?
                new ObjectParameter("satrtdate", satrtdate) :
                new ObjectParameter("satrtdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultSelect_Result>("consultSelect", satrtdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<consultSelect_persno_Result> consultSelect_persno(Nullable<int> persno)
        {
            var persnoParameter = persno.HasValue ?
                new ObjectParameter("persno", persno) :
                new ObjectParameter("persno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<consultSelect_persno_Result>("consultSelect_persno", persnoParameter);
        }
    
        public virtual ObjectResult<Count_pin_Result> Count_pin(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Count_pin_Result>("Count_pin", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<countscreen_Result> countscreen(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<countscreen_Result>("countscreen", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<DoctorsCountPaient_Result> DoctorsCountPaient(string fTurndate, string eTurndate)
        {
            var fTurndateParameter = fTurndate != null ?
                new ObjectParameter("FTurndate", fTurndate) :
                new ObjectParameter("FTurndate", typeof(string));
    
            var eTurndateParameter = eTurndate != null ?
                new ObjectParameter("ETurndate", eTurndate) :
                new ObjectParameter("ETurndate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoctorsCountPaient_Result>("DoctorsCountPaient", fTurndateParameter, eTurndateParameter);
        }
    
        public virtual ObjectResult<string> doctorsname_doctorsWork(Nullable<int> doctorscode_name)
        {
            var doctorscode_nameParameter = doctorscode_name.HasValue ?
                new ObjectParameter("doctorscode_name", doctorscode_name) :
                new ObjectParameter("doctorscode_name", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("doctorsname_doctorsWork", doctorscode_nameParameter);
        }
    
        public virtual ObjectResult<doctorsworks_Result> doctorsworks(string fromdate, string todate, Nullable<int> doctorscode, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doctorsworks_Result>("doctorsworks", fromdateParameter, todateParameter, doctorscodeParameter, zaribParameter);
        }
    
        public virtual ObjectResult<doctorsworkswithpaientstatus_Result> doctorsworkswithpaientstatus(string fromdate, string todate, Nullable<int> paienttype, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var paienttypeParameter = paienttype.HasValue ?
                new ObjectParameter("paienttype", paienttype) :
                new ObjectParameter("paienttype", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doctorsworkswithpaientstatus_Result>("doctorsworkswithpaientstatus", fromdateParameter, todateParameter, paienttypeParameter, zaribParameter);
        }
    
        public virtual ObjectResult<doctorsworkswithpaienttype_Result> doctorsworkswithpaienttype(string fromdate, string todate, Nullable<int> paienttype, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var paienttypeParameter = paienttype.HasValue ?
                new ObjectParameter("paienttype", paienttype) :
                new ObjectParameter("paienttype", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doctorsworkswithpaienttype_Result>("doctorsworkswithpaienttype", fromdateParameter, todateParameter, paienttypeParameter, zaribParameter);
        }
    
        public virtual ObjectResult<doctorsworkswithpaienttype3_Result> doctorsworkswithpaienttype3(string fromdate, string todate, Nullable<int> paienttype, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var paienttypeParameter = paienttype.HasValue ?
                new ObjectParameter("paienttype", paienttype) :
                new ObjectParameter("paienttype", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doctorsworkswithpaienttype3_Result>("doctorsworkswithpaienttype3", fromdateParameter, todateParameter, paienttypeParameter, zaribParameter);
        }
    
        public virtual ObjectResult<doctorsworkswithServices_Result> doctorsworkswithServices(string fromdate, string todate, Nullable<int> doctorscode, Nullable<int> servicescode, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var servicescodeParameter = servicescode.HasValue ?
                new ObjectParameter("servicescode", servicescode) :
                new ObjectParameter("servicescode", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<doctorsworkswithServices_Result>("doctorsworkswithServices", fromdateParameter, todateParameter, doctorscodeParameter, servicescodeParameter, zaribParameter);
        }
    
        public virtual ObjectResult<Doctorsworktime_Datail_Result> Doctorsworktime_Datail(string fromdate, string todate, Nullable<int> doctorscode)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Doctorsworktime_Datail_Result>("Doctorsworktime_Datail", fromdateParameter, todateParameter, doctorscodeParameter);
        }
    
        public virtual ObjectResult<string> doctorsworktime_Sum(string fromdate, string todate, Nullable<int> doctorscode)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("doctorsworktime_Sum", fromdateParameter, todateParameter, doctorscodeParameter);
        }
    
        public virtual ObjectResult<Duplicateineditplanvisit_Result> Duplicateineditplanvisit(Nullable<int> doctorscode, string visitdate, Nullable<System.TimeSpan> fromtime, Nullable<System.TimeSpan> totime, Nullable<int> kind, Nullable<int> planvisit_Code)
        {
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            var fromtimeParameter = fromtime.HasValue ?
                new ObjectParameter("fromtime", fromtime) :
                new ObjectParameter("fromtime", typeof(System.TimeSpan));
    
            var totimeParameter = totime.HasValue ?
                new ObjectParameter("totime", totime) :
                new ObjectParameter("totime", typeof(System.TimeSpan));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(int));
    
            var planvisit_CodeParameter = planvisit_Code.HasValue ?
                new ObjectParameter("planvisit_Code", planvisit_Code) :
                new ObjectParameter("planvisit_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Duplicateineditplanvisit_Result>("Duplicateineditplanvisit", doctorscodeParameter, visitdateParameter, fromtimeParameter, totimeParameter, kindParameter, planvisit_CodeParameter);
        }
    
        public virtual ObjectResult<Duplicateinplanvisit_Result> Duplicateinplanvisit(Nullable<int> doctorscode, string visitdate, Nullable<System.TimeSpan> fromtime, Nullable<System.TimeSpan> totime, Nullable<int> kind)
        {
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            var fromtimeParameter = fromtime.HasValue ?
                new ObjectParameter("fromtime", fromtime) :
                new ObjectParameter("fromtime", typeof(System.TimeSpan));
    
            var totimeParameter = totime.HasValue ?
                new ObjectParameter("totime", totime) :
                new ObjectParameter("totime", typeof(System.TimeSpan));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Duplicateinplanvisit_Result>("Duplicateinplanvisit", doctorscodeParameter, visitdateParameter, fromtimeParameter, totimeParameter, kindParameter);
        }
    
        public virtual ObjectResult<Form_f16_Result> Form_f16(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Form_f16_Result>("Form_f16", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<Form_f16_2_Result> Form_f16_2(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Form_f16_2_Result>("Form_f16_2", fromdateParameter, todateParameter);
        }
    
        public virtual int GeneralDelete(string tables, string conditions)
        {
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneralDelete", tablesParameter, conditionsParameter);
        }
    
        public virtual int GeneralInsert(string tables, string conditions, string fields, string values)
        {
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var valuesParameter = values != null ?
                new ObjectParameter("Values", values) :
                new ObjectParameter("Values", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneralInsert", tablesParameter, conditionsParameter, fieldsParameter, valuesParameter);
        }
    
        public virtual int GeneralJoinSelect(string tables, string conditions, string fields, string joinTables)
        {
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var joinTablesParameter = joinTables != null ?
                new ObjectParameter("JoinTables", joinTables) :
                new ObjectParameter("JoinTables", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneralJoinSelect", tablesParameter, conditionsParameter, fieldsParameter, joinTablesParameter);
        }
    
        public virtual int GeneralSelect(string tables, string conditions, string conditions_2, string fields, string aliasFields, string mainFields, string joinTables, Nullable<int> code)
        {
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            var conditions_2Parameter = conditions_2 != null ?
                new ObjectParameter("Conditions_2", conditions_2) :
                new ObjectParameter("Conditions_2", typeof(string));
    
            var fieldsParameter = fields != null ?
                new ObjectParameter("Fields", fields) :
                new ObjectParameter("Fields", typeof(string));
    
            var aliasFieldsParameter = aliasFields != null ?
                new ObjectParameter("AliasFields", aliasFields) :
                new ObjectParameter("AliasFields", typeof(string));
    
            var mainFieldsParameter = mainFields != null ?
                new ObjectParameter("MainFields", mainFields) :
                new ObjectParameter("MainFields", typeof(string));
    
            var joinTablesParameter = joinTables != null ?
                new ObjectParameter("JoinTables", joinTables) :
                new ObjectParameter("JoinTables", typeof(string));
    
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneralSelect", tablesParameter, conditionsParameter, conditions_2Parameter, fieldsParameter, aliasFieldsParameter, mainFieldsParameter, joinTablesParameter, codeParameter);
        }
    
        public virtual int GeneralUpdate(string tables, string values, string conditions)
        {
            var tablesParameter = tables != null ?
                new ObjectParameter("Tables", tables) :
                new ObjectParameter("Tables", typeof(string));
    
            var valuesParameter = values != null ?
                new ObjectParameter("Values", values) :
                new ObjectParameter("Values", typeof(string));
    
            var conditionsParameter = conditions != null ?
                new ObjectParameter("Conditions", conditions) :
                new ObjectParameter("Conditions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GeneralUpdate", tablesParameter, valuesParameter, conditionsParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> getdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("getdate");
        }
    
        public virtual ObjectResult<getfirstscreendate_doctors_Result> getfirstscreendate_doctors(string fromdate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getfirstscreendate_doctors_Result>("getfirstscreendate_doctors", fromdateParameter);
        }
    
        public virtual ObjectResult<Internal_detailServicesHistory_Result> Internal_detailServicesHistory(Nullable<int> recipeID)
        {
            var recipeIDParameter = recipeID.HasValue ?
                new ObjectParameter("recipeID", recipeID) :
                new ObjectParameter("recipeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Internal_detailServicesHistory_Result>("Internal_detailServicesHistory", recipeIDParameter);
        }
    
        public virtual ObjectResult<InternalServicesHistory_Result> InternalServicesHistory(Nullable<int> fkvdfamily, string turndate1, string turndate2)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var turndate1Parameter = turndate1 != null ?
                new ObjectParameter("turndate1", turndate1) :
                new ObjectParameter("turndate1", typeof(string));
    
            var turndate2Parameter = turndate2 != null ?
                new ObjectParameter("turndate2", turndate2) :
                new ObjectParameter("turndate2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InternalServicesHistory_Result>("InternalServicesHistory", fkvdfamilyParameter, turndate1Parameter, turndate2Parameter);
        }
    
        public virtual ObjectResult<InternalServicesHistoryfull_Result> InternalServicesHistoryfull(Nullable<int> fkvdfamily, string turndate1, string turndate2)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var turndate1Parameter = turndate1 != null ?
                new ObjectParameter("turndate1", turndate1) :
                new ObjectParameter("turndate1", typeof(string));
    
            var turndate2Parameter = turndate2 != null ?
                new ObjectParameter("turndate2", turndate2) :
                new ObjectParameter("turndate2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InternalServicesHistoryfull_Result>("InternalServicesHistoryfull", fkvdfamilyParameter, turndate1Parameter, turndate2Parameter);
        }
    
        public virtual ObjectResult<Introduction_headSelect_Result> Introduction_headSelect(string satrtdate, string enddate)
        {
            var satrtdateParameter = satrtdate != null ?
                new ObjectParameter("satrtdate", satrtdate) :
                new ObjectParameter("satrtdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Introduction_headSelect_Result>("Introduction_headSelect", satrtdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<introduction_outcenter_Result> introduction_outcenter(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<introduction_outcenter_Result>("introduction_outcenter", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<introduction_outcenterdepartment_Result> introduction_outcenterdepartment(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<introduction_outcenterdepartment_Result>("introduction_outcenterdepartment", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<introduction_services_Result> introduction_services(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<introduction_services_Result>("introduction_services", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<string> Introductioncommentprint(Nullable<long> introductionCode)
        {
            var introductionCodeParameter = introductionCode.HasValue ?
                new ObjectParameter("introductionCode", introductionCode) :
                new ObjectParameter("introductionCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Introductioncommentprint", introductionCodeParameter);
        }
    
        public virtual ObjectResult<Introductionprint_Result> Introductionprint(Nullable<long> introductionCode)
        {
            var introductionCodeParameter = introductionCode.HasValue ?
                new ObjectParameter("introductionCode", introductionCode) :
                new ObjectParameter("introductionCode", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Introductionprint_Result>("Introductionprint", introductionCodeParameter);
        }
    
        public virtual ObjectResult<IntroductionSelect_pesno_Result> IntroductionSelect_pesno(Nullable<int> persno)
        {
            var persnoParameter = persno.HasValue ?
                new ObjectParameter("persno", persno) :
                new ObjectParameter("persno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IntroductionSelect_pesno_Result>("IntroductionSelect_pesno", persnoParameter);
        }
    
        public virtual ObjectResult<joblocations_count_Result> joblocations_count(string fromdate, string todate, Nullable<int> fk_Company, Nullable<int> fk_Management, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var fk_CompanyParameter = fk_Company.HasValue ?
                new ObjectParameter("Fk_Company", fk_Company) :
                new ObjectParameter("Fk_Company", typeof(int));
    
            var fk_ManagementParameter = fk_Management.HasValue ?
                new ObjectParameter("Fk_Management", fk_Management) :
                new ObjectParameter("Fk_Management", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<joblocations_count_Result>("joblocations_count", fromdateParameter, todateParameter, fk_CompanyParameter, fk_ManagementParameter, zaribParameter);
        }
    
        public virtual ObjectResult<string> Joblocations_name(Nullable<int> fk_Company2, Nullable<int> fk_Management2)
        {
            var fk_Company2Parameter = fk_Company2.HasValue ?
                new ObjectParameter("Fk_Company2", fk_Company2) :
                new ObjectParameter("Fk_Company2", typeof(int));
    
            var fk_Management2Parameter = fk_Management2.HasValue ?
                new ObjectParameter("Fk_Management2", fk_Management2) :
                new ObjectParameter("Fk_Management2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Joblocations_name", fk_Company2Parameter, fk_Management2Parameter);
        }
    
        public virtual ObjectResult<Kanal_Count_Result> Kanal_Count(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Kanal_Count_Result>("Kanal_Count", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<medicalrestSelect_Result> medicalrestSelect(string satrtdate, string enddate)
        {
            var satrtdateParameter = satrtdate != null ?
                new ObjectParameter("satrtdate", satrtdate) :
                new ObjectParameter("satrtdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<medicalrestSelect_Result>("medicalrestSelect", satrtdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<medicalrestSelect_persno_Result> medicalrestSelect_persno(Nullable<int> persno)
        {
            var persnoParameter = persno.HasValue ?
                new ObjectParameter("persno", persno) :
                new ObjectParameter("persno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<medicalrestSelect_persno_Result>("medicalrestSelect_persno", persnoParameter);
        }
    
        public virtual ObjectResult<string> paienttypeName_doctorsWork(Nullable<int> paienttypeCodeName)
        {
            var paienttypeCodeNameParameter = paienttypeCodeName.HasValue ?
                new ObjectParameter("PaienttypeCodeName", paienttypeCodeName) :
                new ObjectParameter("PaienttypeCodeName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("paienttypeName_doctorsWork", paienttypeCodeNameParameter);
        }
    
        public virtual ObjectResult<string> paienttypestatus_doctorsWork(Nullable<int> paientstatusCodeName)
        {
            var paientstatusCodeNameParameter = paientstatusCodeName.HasValue ?
                new ObjectParameter("PaientstatusCodeName", paientstatusCodeName) :
                new ObjectParameter("PaientstatusCodeName", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("paienttypestatus_doctorsWork", paientstatusCodeNameParameter);
        }
    
        public virtual ObjectResult<paientwithjoblocations_Result> paientwithjoblocations(string fromdate, string todate, Nullable<int> fk_Company, Nullable<int> fk_Management, Nullable<int> zarib)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var fk_CompanyParameter = fk_Company.HasValue ?
                new ObjectParameter("Fk_Company", fk_Company) :
                new ObjectParameter("Fk_Company", typeof(int));
    
            var fk_ManagementParameter = fk_Management.HasValue ?
                new ObjectParameter("Fk_Management", fk_Management) :
                new ObjectParameter("Fk_Management", typeof(int));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<paientwithjoblocations_Result>("paientwithjoblocations", fromdateParameter, todateParameter, fk_CompanyParameter, fk_ManagementParameter, zaribParameter);
        }
    
        public virtual ObjectResult<RecipePrintview_Result> RecipePrintview(Nullable<long> turnid)
        {
            var turnidParameter = turnid.HasValue ?
                new ObjectParameter("turnid", turnid) :
                new ObjectParameter("turnid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RecipePrintview_Result>("RecipePrintview", turnidParameter);
        }
    
        public virtual ObjectResult<referrals_Count_Result> referrals_Count(string fromdate, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<referrals_Count_Result>("referrals_Count", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<screen_historical_Result> screen_historical(Nullable<int> fkvdfamily, Nullable<int> typeScreen_code)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var typeScreen_codeParameter = typeScreen_code.HasValue ?
                new ObjectParameter("TypeScreen_code", typeScreen_code) :
                new ObjectParameter("TypeScreen_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<screen_historical_Result>("screen_historical", fkvdfamilyParameter, typeScreen_codeParameter);
        }
    
        public virtual ObjectResult<Select_niocperson_paientview_Result> Select_niocperson_paientview(Nullable<int> pk_vdfamily)
        {
            var pk_vdfamilyParameter = pk_vdfamily.HasValue ?
                new ObjectParameter("pk_vdfamily", pk_vdfamily) :
                new ObjectParameter("pk_vdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_niocperson_paientview_Result>("Select_niocperson_paientview", pk_vdfamilyParameter);
        }
    
        public virtual ObjectResult<selectChiefcomplain_Result> selectChiefcomplain(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectChiefcomplain_Result>("selectChiefcomplain", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectCostConfirm_Result> selectCostConfirm(Nullable<int> fkvdfamily, string visitdate)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectCostConfirm_Result>("selectCostConfirm", fkvdfamilyParameter, visitdateParameter);
        }
    
        public virtual ObjectResult<selectCostConfirm_detail_Result> selectCostConfirm_detail(Nullable<int> costconfirmHeadCode)
        {
            var costconfirmHeadCodeParameter = costconfirmHeadCode.HasValue ?
                new ObjectParameter("costconfirmHeadCode", costconfirmHeadCode) :
                new ObjectParameter("costconfirmHeadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectCostConfirm_detail_Result>("selectCostConfirm_detail", costconfirmHeadCodeParameter);
        }
    
        public virtual ObjectResult<selectCostConfirm_head_Result> selectCostConfirm_head(string fromdate, string enddate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectCostConfirm_head_Result>("selectCostConfirm_head", fromdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> selectCountRecipe(Nullable<int> planvisit_code)
        {
            var planvisit_codeParameter = planvisit_code.HasValue ?
                new ObjectParameter("Planvisit_code", planvisit_code) :
                new ObjectParameter("Planvisit_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("selectCountRecipe", planvisit_codeParameter);
        }
    
        public virtual ObjectResult<selectDentalSurgery_Result> selectDentalSurgery(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectDentalSurgery_Result>("selectDentalSurgery", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectExt_Sx_Comment_Result> selectExt_Sx_Comment(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectExt_Sx_Comment_Result>("selectExt_Sx_Comment", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectGraphy_comment_Result> selectGraphy_comment(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectGraphy_comment_Result>("selectGraphy_comment", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectGraphy_needed_Result> selectGraphy_needed(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectGraphy_needed_Result>("selectGraphy_needed", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectIntroduction_detail_Result> selectIntroduction_detail(Nullable<int> introductionHeadCode)
        {
            var introductionHeadCodeParameter = introductionHeadCode.HasValue ?
                new ObjectParameter("IntroductionHeadCode", introductionHeadCode) :
                new ObjectParameter("IntroductionHeadCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectIntroduction_detail_Result>("selectIntroduction_detail", introductionHeadCodeParameter);
        }
    
        public virtual ObjectResult<selectOther_Result> selectOther(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectOther_Result>("selectOther", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectOther_Comment_Result> selectOther_Comment(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectOther_Comment_Result>("selectOther_Comment", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectPaientList_Result> selectPaientList(Nullable<int> doctorsCode, string turndate, Nullable<byte> turnstatus, Nullable<byte> kind)
        {
            var doctorsCodeParameter = doctorsCode.HasValue ?
                new ObjectParameter("DoctorsCode", doctorsCode) :
                new ObjectParameter("DoctorsCode", typeof(int));
    
            var turndateParameter = turndate != null ?
                new ObjectParameter("Turndate", turndate) :
                new ObjectParameter("Turndate", typeof(string));
    
            var turnstatusParameter = turnstatus.HasValue ?
                new ObjectParameter("turnstatus", turnstatus) :
                new ObjectParameter("turnstatus", typeof(byte));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPaientList_Result>("selectPaientList", doctorsCodeParameter, turndateParameter, turnstatusParameter, kindParameter);
        }
    
        public virtual ObjectResult<selectPaientList__Result> selectPaientList_(Nullable<int> doctorsCode, string turndate, Nullable<byte> turnstatus)
        {
            var doctorsCodeParameter = doctorsCode.HasValue ?
                new ObjectParameter("DoctorsCode", doctorsCode) :
                new ObjectParameter("DoctorsCode", typeof(int));
    
            var turndateParameter = turndate != null ?
                new ObjectParameter("Turndate", turndate) :
                new ObjectParameter("Turndate", typeof(string));
    
            var turnstatusParameter = turnstatus.HasValue ?
                new ObjectParameter("turnstatus", turnstatus) :
                new ObjectParameter("turnstatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPaientList__Result>("selectPaientList_", doctorsCodeParameter, turndateParameter, turnstatusParameter);
        }
    
        public virtual ObjectResult<selectPaientList_turnstatus_Result> selectPaientList_turnstatus(string fromdate, string todate, Nullable<byte> turnstatus)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var turnstatusParameter = turnstatus.HasValue ?
                new ObjectParameter("turnstatus", turnstatus) :
                new ObjectParameter("turnstatus", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPaientList_turnstatus_Result>("selectPaientList_turnstatus", fromdateParameter, todateParameter, turnstatusParameter);
        }
    
        public virtual ObjectResult<selectPerio_tx_Comment_Result> selectPerio_tx_Comment(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPerio_tx_Comment_Result>("selectPerio_tx_Comment", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectPerioTx_Result> selectPerioTx(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPerioTx_Result>("selectPerioTx", fkvdfamilyParameter);
        }
    
        public virtual int SelectPersonTbl(string persno)
        {
            var persnoParameter = persno != null ?
                new ObjectParameter("persno", persno) :
                new ObjectParameter("persno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SelectPersonTbl", persnoParameter);
        }
    
        public virtual ObjectResult<SelectPersonTblvdfamily_Result> SelectPersonTblvdfamily(string pkvdfamily)
        {
            var pkvdfamilyParameter = pkvdfamily != null ?
                new ObjectParameter("pkvdfamily", pkvdfamily) :
                new ObjectParameter("pkvdfamily", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPersonTblvdfamily_Result>("SelectPersonTblvdfamily", pkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectPlanvisit_Result> selectPlanvisit(string visitdate, Nullable<int> shiftcode, Nullable<byte> kind)
        {
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            var shiftcodeParameter = shiftcode.HasValue ?
                new ObjectParameter("Shiftcode", shiftcode) :
                new ObjectParameter("Shiftcode", typeof(int));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPlanvisit_Result>("selectPlanvisit", visitdateParameter, shiftcodeParameter, kindParameter);
        }
    
        public virtual ObjectResult<selectPlanvisit__Result> selectPlanvisit_(string visitdate, Nullable<int> shiftcode, Nullable<byte> kind)
        {
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            var shiftcodeParameter = shiftcode.HasValue ?
                new ObjectParameter("Shiftcode", shiftcode) :
                new ObjectParameter("Shiftcode", typeof(int));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPlanvisit__Result>("selectPlanvisit_", visitdateParameter, shiftcodeParameter, kindParameter);
        }
    
        public virtual ObjectResult<selectRCT_Result> selectRCT(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRCT_Result>("selectRCT", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectRCT_Comment_Result> selectRCT_Comment(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRCT_Comment_Result>("selectRCT_Comment", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectrecipe_webscreen_Result> selectrecipe_webscreen(Nullable<int> fkvdfamily, string cdate, Nullable<int> kind)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var cdateParameter = cdate != null ?
                new ObjectParameter("cdate", cdate) :
                new ObjectParameter("cdate", typeof(string));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectrecipe_webscreen_Result>("selectrecipe_webscreen", fkvdfamilyParameter, cdateParameter, kindParameter);
        }
    
        public virtual ObjectResult<selectRecipeError_Result> selectRecipeError(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRecipeError_Result>("selectRecipeError", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectRestorative_Result> selectRestorative(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRestorative_Result>("selectRestorative", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<selectRestorativeTx_Comment_Result> selectRestorativeTx_Comment(Nullable<int> fkvdfamily)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("fkvdfamily", fkvdfamily) :
                new ObjectParameter("fkvdfamily", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRestorativeTx_Comment_Result>("selectRestorativeTx_Comment", fkvdfamilyParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> selectTurnno(Nullable<int> planvisit_code)
        {
            var planvisit_codeParameter = planvisit_code.HasValue ?
                new ObjectParameter("Planvisit_code", planvisit_code) :
                new ObjectParameter("Planvisit_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("selectTurnno", planvisit_codeParameter);
        }
    
        public virtual ObjectResult<Nullable<byte>> selectTurnno_screen(Nullable<int> planvisit_code)
        {
            var planvisit_codeParameter = planvisit_code.HasValue ?
                new ObjectParameter("Planvisit_code", planvisit_code) :
                new ObjectParameter("Planvisit_code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<byte>>("selectTurnno_screen", planvisit_codeParameter);
        }
    
        public virtual ObjectResult<ServicesHistory_Result> ServicesHistory(Nullable<int> fkvdfamily, string visitdate)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ServicesHistory_Result>("ServicesHistory", fkvdfamilyParameter, visitdateParameter);
        }
    
        public virtual ObjectResult<string> servicesname_doctorsWork(Nullable<int> services_detail_Code)
        {
            var services_detail_CodeParameter = services_detail_Code.HasValue ?
                new ObjectParameter("Services_detail_Code", services_detail_Code) :
                new ObjectParameter("Services_detail_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("servicesname_doctorsWork", services_detail_CodeParameter);
        }
    
        public virtual ObjectResult<string> sp_miladitoshamsi(Nullable<System.DateTime> miladidate)
        {
            var miladidateParameter = miladidate.HasValue ?
                new ObjectParameter("miladidate", miladidate) :
                new ObjectParameter("miladidate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_miladitoshamsi", miladidateParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> sp_shamsitomiladi(string shamsidate)
        {
            var shamsidateParameter = shamsidate != null ?
                new ObjectParameter("shamsidate", shamsidate) :
                new ObjectParameter("shamsidate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("sp_shamsitomiladi", shamsidateParameter);
        }
    
        public virtual ObjectResult<turnNo_screenView_Result> turnNo_screenView(Nullable<int> fkvdfamily, string cdate)
        {
            var fkvdfamilyParameter = fkvdfamily.HasValue ?
                new ObjectParameter("Fkvdfamily", fkvdfamily) :
                new ObjectParameter("Fkvdfamily", typeof(int));
    
            var cdateParameter = cdate != null ?
                new ObjectParameter("cdate", cdate) :
                new ObjectParameter("cdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<turnNo_screenView_Result>("turnNo_screenView", fkvdfamilyParameter, cdateParameter);
        }
    
        public virtual ObjectResult<vacationinplanvisit_Result> vacationinplanvisit(Nullable<int> doctorscode, string visitdate)
        {
            var doctorscodeParameter = doctorscode.HasValue ?
                new ObjectParameter("doctorscode", doctorscode) :
                new ObjectParameter("doctorscode", typeof(int));
    
            var visitdateParameter = visitdate != null ?
                new ObjectParameter("visitdate", visitdate) :
                new ObjectParameter("visitdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vacationinplanvisit_Result>("vacationinplanvisit", doctorscodeParameter, visitdateParameter);
        }
    
        public virtual ObjectResult<web_screen_select_Result> web_screen_select(string nationalCode, Nullable<int> persNo)
        {
            var nationalCodeParameter = nationalCode != null ?
                new ObjectParameter("NationalCode", nationalCode) :
                new ObjectParameter("NationalCode", typeof(string));
    
            var persNoParameter = persNo.HasValue ?
                new ObjectParameter("PersNo", persNo) :
                new ObjectParameter("PersNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<web_screen_select_Result>("web_screen_select", nationalCodeParameter, persNoParameter);
        }
    
        public virtual ObjectResult<XML_5_Result> XML_5(string fromdate, string todate, Nullable<int> zarib, Nullable<int> kind)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            var zaribParameter = zarib.HasValue ?
                new ObjectParameter("zarib", zarib) :
                new ObjectParameter("zarib", typeof(int));
    
            var kindParameter = kind.HasValue ?
                new ObjectParameter("kind", kind) :
                new ObjectParameter("kind", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<XML_5_Result>("XML_5", fromdateParameter, todateParameter, zaribParameter, kindParameter);
        }
    }
}
